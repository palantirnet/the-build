version: 2.1
# To use browsers on CircleCI, uncomment the lines below and add steps to install them.
# For example, add these to `jobs.build.steps`:
# - browser-tools/install-chrome
# - browser-tools/install-chromedriver
# orbs:
#   browser-tools: circleci/browser-tools@1.2.3
jobs:
  build:
    working_directory: ~/${projectname}
    docker:
      - image: cimg/php:8.3-browsers
      - image: cimg/mysql:8.0
        command: --max_allowed_packet=16M
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_DATABASE: circle_test

    environment:
      - PALANTIR_ENVIRONMENT: circleci
      - DRUPAL_ROOT: ${drupal.root}
      - NODE_VERSION: 18

    steps:
      - run:
          name: Install packages
          command: |
            sudo apt-get update && sudo apt-get install -y libpng-dev default-mysql-client
      - run:
          name: Install nvm
          command: |
            set +e
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
            touch $BASH_ENV
            echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
      - run:
          name: Configure PHP
          command: |
            echo "sendmail_path=/bin/true" | sudo tee -a "/etc/php.d/circleci.ini"
      - run:
          name: Update Composer
          command: |
            sudo composer self-update
      - run:
          name: Create artifacts directory
          command: mkdir /tmp/artifacts
      - run:
          name: Configure URL in /etc/hosts
          command: echo 127.0.0.1 ${CIRCLE_PROJECT_REPONAME}.local | sudo tee -a /etc/hosts

      # Composer package cache
      - restore_cache:
          keys:
            - composer-v1-
      # Source cache
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}
            - source-v1-

      - checkout
      - run:
          name: Composer install
          command: composer install --no-interaction --prefer-dist

      # Composer package cache - update when the contents of the Composer cache directory
      # change
      - run: ls -1R ~/.cache/composer/ > /tmp/composer-cache.txt
      - save_cache:
          key: composer-v1-{{ checksum "/tmp/composer-cache.txt" }}
          paths:
              - ~/.cache/composer
      # Source cache - update when branch changes
      - save_cache:
          key: source-v1-{{ .Branch }}
          paths:
            - ".git"

      # Run code reviews before installing Drupal, so that tests fail earlier.
      - run:
          name: Run code reviews
          command: vendor/bin/phing code-review

      - run:
          name: Wait for DB
          # Dockerize is preinstalled in circleci/* docker image
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s

      - run:
          name: Build Drupal's settings.php
          command: vendor/bin/phing build
      - run:
          name: Install Drupal
          command: vendor/bin/phing install
      - run:
          name: Run any migrations
          command: vendor/bin/phing migrate
      - run:
          name: Run Behat tests
          command: |
              cd ${DRUPAL_ROOT}
              nohup php -S ${CIRCLE_PROJECT_REPONAME}.local:8000 .ht.router.php > /tmp/artifacts/phpd.log 2>&1 &
              google-chrome --headless --remote-debugging-port=9222 &>/dev/null &
              cd ..
              vendor/bin/phing test

      - store_artifacts:
          path: /tmp/artifacts
      - store_test_results:
          path: /tmp/artifacts

workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - gh-pages
                - /.*(readme|documentation).*/
